"de.java_chess.javaChess.GameController.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/engine/ChessEngine;Lde/java_chess/javaChess/board/Board;Lde/java_chess/javaChess/timer/GameTimer;)V" --- "de.java_chess.javaChess.GameController.setBoard(Lde/java_chess/javaChess/board/Board;)V"}, { 
"de.java_chess.javaChess.GameController.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/engine/ChessEngine;Lde/java_chess/javaChess/board/Board;Lde/java_chess/javaChess/timer/GameTimer;)V" --- "de.java_chess.javaChess.GameController.setEngine(Lde/java_chess/javaChess/engine/ChessEngine;)V"}, { 
"de.java_chess.javaChess.GameController.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/engine/ChessEngine;Lde/java_chess/javaChess/board/Board;Lde/java_chess/javaChess/timer/GameTimer;)V" --- "de.java_chess.javaChess.GameController.setGame(Lde/java_chess/javaChess/game/Game;)V"}, { 
"de.java_chess.javaChess.GameController.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/engine/ChessEngine;Lde/java_chess/javaChess/board/Board;Lde/java_chess/javaChess/timer/GameTimer;)V" --- "de.java_chess.javaChess.GameController.setGameNotation(Lde/java_chess/javaChess/notation/GameNotation;)V"}, { 
"de.java_chess.javaChess.GameController.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/engine/ChessEngine;Lde/java_chess/javaChess/board/Board;Lde/java_chess/javaChess/timer/GameTimer;)V" --- "de.java_chess.javaChess.GameController.setGameTimer(Lde/java_chess/javaChess/timer/GameTimer;)V"}, { 
"de.java_chess.javaChess.GameController.computerPly()Z" --- "de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.GameController.computerPly()Z" --- "de.java_chess.javaChess.GameController.getEngine()Lde/java_chess/javaChess/engine/ChessEngine;"
"de.java_chess.javaChess.GameController.computerPly()Z" --- "de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.GameController.computerPly()Z" --- "de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()V"
"de.java_chess.javaChess.GameController.convertUserPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.GameController.getBoard()Lde/java_chess/javaChess/board/Board;"
"de.java_chess.javaChess.GameController.convertUserPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(Lde/java_chess/javaChess/position/Position;)Lde/java_chess/javaChess/piece/Piece;"
"de.java_chess.javaChess.GameController.convertUserPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.piece.PieceImpl.getType()B"
"de.java_chess.javaChess.GameController.convertUserPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.ply.PlyImpl.getDestination()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.GameController.convertUserPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.ply.PlyImpl.getSource()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.GameController.convertUserPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.ply.PlyImpl.setCapture(Z)V"
"de.java_chess.javaChess.GameController.convertUserPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.position.PositionImpl.getSquareIndex()I"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.GameController.gameOver(Z)Z"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.GameController.getBoard()Lde/java_chess/javaChess/board/Board;"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.GameController.getGame()Lde/java_chess/javaChess/game/Game;"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.GameController.getGameNotation()Lde/java_chess/javaChess/notation/GameNotation;"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.GameController.getRenderer()Lde/java_chess/javaChess/renderer/ChessBoardRenderer;"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.GameController.toggleMoveRight()V"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(Lde/java_chess/javaChess/position/Position;)Lde/java_chess/javaChess/piece/Piece;"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.game.GameImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.notation.GameNotationImpl.addPly(Lde/java_chess/javaChess/notation/PlyNotation;)V"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.notation.PlyNotationImpl.-init-(Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/piece/Piece;)V"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.ply.PlyImpl.getSource()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.doPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.GameController.gameOver(Z)Z" --- "de.java_chess.javaChess.GameController.getEngine()Lde/java_chess/javaChess/engine/ChessEngine;"
"de.java_chess.javaChess.GameController.gameOver(Z)Z" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(Z)B"
"de.java_chess.javaChess.GameController.setGameTimer(Lde/java_chess/javaChess/timer/GameTimer;)V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.addActionListener(Ljava/awt/event/ActionListener;)V"
"de.java_chess.javaChess.GameController.toggleMoveRight()V" --- "de.java_chess.javaChess.GameController.computerPly()Z"
"de.java_chess.javaChess.GameController.toggleMoveRight()V" --- "de.java_chess.javaChess.GameController.getGameTimer()Lde/java_chess/javaChess/timer/GameTimer;"
"de.java_chess.javaChess.GameController.toggleMoveRight()V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.isRunning()Z"
"de.java_chess.javaChess.GameController.toggleMoveRight()V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.start()V"
"de.java_chess.javaChess.GameController.toggleMoveRight()V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()V"
"de.java_chess.javaChess.GameController.userPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.GameController.convertUserPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.GameController.userPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.GameController.doPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.GameController.userPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.GameController.getEngine()Lde/java_chess/javaChess/engine/ChessEngine;"
"de.java_chess.javaChess.GameController.userPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.stopPermanentBrain()V"
"de.java_chess.javaChess.GameController.userPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(Lde/java_chess/javaChess/ply/Ply;)Z"
"de.java_chess.javaChess.JavaChess.-init-()V" --- "de.java_chess.javaChess.JavaChess$1.-init-()V"
"de.java_chess.javaChess.JavaChess.-init-()V" --- "de.java_chess.javaChess.JavaChess$2.-init-()V"
"de.java_chess.javaChess.JavaChess.-init-()V" --- "de.java_chess.javaChess.JavaChess.free()V"
"de.java_chess.javaChess.JavaChess.-init-()V" --- "de.java_chess.javaChess.JavaChess.jbInit()V"
"de.java_chess.javaChess.JavaChess.-init-()V" --- "de.java_chess.javaChess.JavaChess.setDefaultFrameCoordinates()V"
"de.java_chess.javaChess.JavaChess.-init-()V" --- "de.java_chess.javaChess.renderer2d.StatusPanel.-init-(Ljava/lang/String;)V"
"de.java_chess.javaChess.JavaChess.engineStatusChanged(Lde/java_chess/javaChess/engine/ChessEngineImpl;)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()Ljava/lang/String;"
"de.java_chess.javaChess.JavaChess.engineStatusChanged(Lde/java_chess/javaChess/engine/ChessEngineImpl;)V" --- "de.java_chess.javaChess.renderer2d.StatusPanel.setActionText(Ljava/lang/String;)V"
"de.java_chess.javaChess.JavaChess.getMenuItem(Lde/java_chess/javaChess/action/JavaChessAction;)Ljavax/swing/JMenuItem;" --- "de.java_chess.javaChess.action.JavaChessAction.getName()Ljava/lang/String;"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.GameController.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/engine/ChessEngine;Lde/java_chess/javaChess/board/Board;Lde/java_chess/javaChess/timer/GameTimer;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.GameController.setRenderer(Lde/java_chess/javaChess/renderer/ChessBoardRenderer;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.JavaChess$3.-init-(Lde/java_chess/javaChess/JavaChess;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.JavaChess$4.-init-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.JavaChess.engineStatusChanged(Lde/java_chess/javaChess/engine/ChessEngineImpl;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.JavaChess.getMenuItem(Lde/java_chess/javaChess/action/JavaChessAction;)Ljavax/swing/JMenuItem;"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.action.AboutAction.-init-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.action.HelpAction.-init-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.action.LoadGameAction.-init-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.action.ResetGameAction.-init-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.action.SaveGameAction.-init-(Lde/java_chess/javaChess/notation/GameNotation;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.action.SaveGameAsAction.-init-(Lde/java_chess/javaChess/notation/GameNotation;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.addEngineStatusListener(Lde/java_chess/javaChess/listener/EngineStatusListener;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()Ljavax/swing/JMenu;"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setEnginePanel(Lde/java_chess/javaChess/renderer2d/EnginePanel;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setStatusPanel(Lde/java_chess/javaChess/renderer2d/StatusPanel;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.game.GameImpl.-init-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.menu.EditMenu.-init-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.menu.EditMenu.getMenu()Ljavax/swing/JMenu;"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.menu.EditMenu.setNotationPanel(Lde/java_chess/javaChess/renderer2d/NotationPanel;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.notation.GameNotationImpl.-init-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.notation.GameNotationImpl.setNotationPanel(Lde/java_chess/javaChess/renderer2d/NotationPanel;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(Lde/java_chess/javaChess/GameController;Lde/java_chess/javaChess/board/Board;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getPreferredSize()Ljava/awt/Dimension;"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.renderer2d.EnginePanel.-init-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(I)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.renderer2d.NavigationPanel.-init-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.renderer2d.NotationPanel.-init-(Lde/java_chess/javaChess/notation/GameNotation;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.util.ResourceLoader.-clinit-()V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.util.ResourceLoader.addLocation(Ljava/lang/String;)V"
"de.java_chess.javaChess.JavaChess.jbInit()V" --- "de.java_chess.javaChess.util.ResourceLoader.getInstance()Lde/java_chess/javaChess/util/ResourceLoader;"
"de.java_chess.javaChess.JavaChess.main([Ljava/lang/String;)V" --- "de.java_chess.javaChess.JavaChess.-init-()V"
"de.java_chess.javaChess.JavaChess.reset()V" --- "de.java_chess.javaChess.GameController.reset()V"
"de.java_chess.javaChess.JavaChess.reset()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()V"
"de.java_chess.javaChess.JavaChess.reset()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.reset()V"
"de.java_chess.javaChess.JavaChess.reset()V" --- "de.java_chess.javaChess.game.GameImpl.reset()V"
"de.java_chess.javaChess.JavaChess.reset()V" --- "de.java_chess.javaChess.notation.GameNotationImpl.reset()V"
"de.java_chess.javaChess.JavaChess.reset()V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.reset()V"
"de.java_chess.javaChess.JavaChess.reset()V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(I)V"
"de.java_chess.javaChess.JavaChess.setDefaultFrameCoordinates()V" --- "de.java_chess.javaChess.JavaChess.packFrame()Ljava/awt/Dimension;"
"de.java_chess.javaChess.JavaChess.setDefaultFrameCoordinates()V" --- "de.java_chess.javaChess.JavaChess.placeFrame(Ljava/awt/Dimension;Ljava/awt/Dimension;)V"
"de.java_chess.javaChess.JavaChess.setDefaultFrameCoordinates()V" --- "de.java_chess.javaChess.JavaChess.setFrameSize(Ljava/awt/Dimension;Ljava/awt/Dimension;)V"
"de.java_chess.javaChess.action.AboutAction.-init-()V" --- "de.java_chess.javaChess.action.JavaChessAction.-init-(Ljava/lang/String;)V"
"de.java_chess.javaChess.action.HelpAction.-init-()V" --- "de.java_chess.javaChess.action.JavaChessAction.-init-(Ljava/lang/String;)V"
"de.java_chess.javaChess.action.JavaChessAction.getName()Ljava/lang/String;" --- "de.java_chess.javaChess.action.JavaChessAction.getShortDescription()Ljava/lang/String;"
"de.java_chess.javaChess.action.LoadGameAction.-init-()V" --- "de.java_chess.javaChess.action.JavaChessAction.-init-(Ljava/lang/String;)V"
"de.java_chess.javaChess.action.LoadGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.action.SaveGameAsAction.getPGNFileFilter()Lde/java_chess/javaChess/pgn/PGNFileFilter;"
"de.java_chess.javaChess.action.LoadGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.pgn.PGNFile.-init-(Ljava/io/Reader;)V"
"de.java_chess.javaChess.action.LoadGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.pgn.PGNFile.readGame()Lde/java_chess/javaChess/notation/GameNotation;"
"de.java_chess.javaChess.action.LoadGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.pgn.PGNFileFilter.getDescription()Ljava/lang/String;"
"de.java_chess.javaChess.action.LoadGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(Ljava/awt/Graphics;)V"
"de.java_chess.javaChess.action.LoadGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.renderer2d.ControlLayer.paintComponent(Ljava/awt/Graphics;)V"
"de.java_chess.javaChess.action.ResetGameAction.-init-()V" --- "de.java_chess.javaChess.action.JavaChessAction.-init-(Ljava/lang/String;)V"
"de.java_chess.javaChess.action.ResetGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.JavaChess.getInstance()Lde/java_chess/javaChess/JavaChess;"
"de.java_chess.javaChess.action.ResetGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.JavaChess.reset()V"
"de.java_chess.javaChess.action.SaveGameAction.-init-(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.action.JavaChessAction.-init-(Ljava/lang/String;)V"
"de.java_chess.javaChess.action.SaveGameAction.-init-(Ljava/lang/String;Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.action.JavaChessAction.-init-(Ljava/lang/String;)V"
"de.java_chess.javaChess.action.SaveGameAction.trySave(Ljava/io/File;)V" --- "de.java_chess.javaChess.pgn.PGNOutputStream.-init-(Ljava/io/File;)V"
"de.java_chess.javaChess.action.SaveGameAction.trySave(Ljava/io/File;)V" --- "de.java_chess.javaChess.pgn.PGNOutputStream.write(Lde/java_chess/javaChess/notation/GameNotation;)V"
"de.java_chess.javaChess.action.SaveGameAsAction.-init-(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.action.SaveGameAction.-init-(Ljava/lang/String;Lde/java_chess/javaChess/notation/GameNotation;)V"
"de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.action.SaveGameAction.trySave(Ljava/io/File;)V"
"de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.action.SaveGameAsAction.getPGNFileFilter()Lde/java_chess/javaChess/pgn/PGNFileFilter;"
"de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.pgn.PGNFileFilter.getDescription()Ljava/lang/String;"
"de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(Ljava/awt/Graphics;)V"
"de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.renderer2d.ControlLayer.paintComponent(Ljava/awt/Graphics;)V"
"de.java_chess.javaChess.action.SaveGameAsAction.getPGNFileFilter()Lde/java_chess/javaChess/pgn/PGNFileFilter;" --- "de.java_chess.javaChess.pgn.PGNFileFilter.-init-()V"
"de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()V"
"de.java_chess.javaChess.bitboard.BitBoardImpl.clone()Ljava/lang/Object;" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()V"
"de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(Lde/java_chess/javaChess/position/Position;)Lde/java_chess/javaChess/piece/Piece;"
"de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(Lde/java_chess/javaChess/piece/Piece;Lde/java_chess/javaChess/position/Position;)V"
"de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.ply.PlyImpl.getDestination()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.ply.PlyImpl.getSource()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/board/Board;" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.clone()Ljava/lang/Object;"
"de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/board/Board;" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(Lde/java_chess/javaChess/position/Position;)Lde/java_chess/javaChess/piece/Piece;" --- "de.java_chess.javaChess.piece.PieceImpl.-init-(B)V"
"de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(Lde/java_chess/javaChess/position/Position;)Lde/java_chess/javaChess/piece/Piece;" --- "de.java_chess.javaChess.position.PositionImpl.getSquareIndex()I"
"de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(Lde/java_chess/javaChess/piece/Piece;Lde/java_chess/javaChess/position/Position;)V"
"de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()V" --- "de.java_chess.javaChess.piece.PieceImpl.-init-(BB)V"
"de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()V" --- "de.java_chess.javaChess.position.PositionImpl.-init-(I)V"
"de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(Lde/java_chess/javaChess/piece/Piece;Lde/java_chess/javaChess/position/Position;)V" --- "de.java_chess.javaChess.piece.PieceImpl.getTypeAndColor()B"
"de.java_chess.javaChess.bitboard.BitBoardImpl.setPiece(Lde/java_chess/javaChess/piece/Piece;Lde/java_chess/javaChess/position/Position;)V" --- "de.java_chess.javaChess.position.PositionImpl.getSquareIndex()I"
"de.java_chess.javaChess.dialogs.PlayerDialog.-init-(ILjava/lang/String;)V" --- "de.java_chess.javaChess.dialogs.PlayerDialog.jbInit()V"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/engine/PlyGenerator;)V" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setGame(Lde/java_chess/javaChess/game/Game;)V"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/engine/PlyGenerator;)V" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setPlyGenerator(Lde/java_chess/javaChess/engine/PlyGenerator;)V"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()J"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(Lde/java_chess/javaChess/position/Position;)Lde/java_chess/javaChess/piece/Piece;"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(I)J"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getBoard()Lde/java_chess/javaChess/bitboard/BitBoard;"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getGame()Lde/java_chess/javaChess/game/Game;"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Z)Z"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.whiteHasMoveRight()Z"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.game.GameImpl.getNumberOfPlies()I"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.piece.PieceImpl.getType()B"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.piece.PieceImpl.isWhite()Z"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.position.PositionImpl.-init-(I)V"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S" --- "de.java_chess.javaChess.position.PositionImpl.setSquareIndex(I)V"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(Lde/java_chess/javaChess/bitboard/BitBoard;Z)S" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze()S"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(Lde/java_chess/javaChess/bitboard/BitBoard;Z)S" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setBoard(Lde/java_chess/javaChess/bitboard/BitBoard;)V"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(Lde/java_chess/javaChess/bitboard/BitBoard;Z)S" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setMoveRight(Z)V"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Lde/java_chess/javaChess/bitboard/BitBoard;Z)Z" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Z)Z"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Lde/java_chess/javaChess/bitboard/BitBoard;Z)Z" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.setBoard(Lde/java_chess/javaChess/bitboard/BitBoard;)V"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Z)Z" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()J"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Z)Z" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(I)J"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Z)Z" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getBoard()Lde/java_chess/javaChess/bitboard/BitBoard;"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Z)Z" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.getPlyGenerator()Lde/java_chess/javaChess/engine/PlyGenerator;"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Z)Z" --- "de.java_chess.javaChess.engine.BitUtils.getHighestBit(J)I"
"de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Z)Z" --- "de.java_chess.javaChess.engine.PlyGenerator.getKnightPlies(I)J"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-clinit-()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/engine/PlyGenerator;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.createLogFile()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getGame()Lde/java_chess/javaChess/game/Game;"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setBoard(Lde/java_chess/javaChess/board/Board;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setGame(Lde/java_chess/javaChess/game/Game;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setInOpeningBook(Z)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setOpeningBook(Lde/java_chess/javaChess/engine/opening_book/OpeningBook;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setPermanentBrain(Lde/java_chess/javaChess/engine/permanent_brain/PermanentBrain;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setWhite(Z)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.PlyGenerator.-clinit-()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.PlyGenerator.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(Lde/java_chess/javaChess/engine/BitBoardAnalyzer;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(I)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.-init-(Lde/java_chess/javaChess/notation/GameNotation;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/notation/GameNotation;Lde/java_chess/javaChess/board/Board;Z)V" --- "de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.-init-(Lde/java_chess/javaChess/engine/ChessEngine;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.activatePermanentBrain(Z)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.notifyListeners()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.activatePermanentBrain(Z)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.stopPermanentBrain()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.activatePermanentBrain(Z)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.analyzeBoard(Lde/java_chess/javaChess/board/Board;)S" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.analyze(Lde/java_chess/javaChess/bitboard/BitBoard;Z)S"
"de.java_chess.javaChess.engine.ChessEngineImpl.analyzeBoard(Lde/java_chess/javaChess/board/Board;)S" --- "de.java_chess.javaChess.engine.ChessEngineImpl.isWhite()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getAnalyzedBoards()J"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getMaximumSearchTime()I"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getOpeningBook()Lde/java_chess/javaChess/engine/opening_book/OpeningBook;"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getSearchDepth()I"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.inOpeningBook()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setInOpeningBook(Z)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setSearchStop(Z)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.start()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()Lde/java_chess/javaChess/ply/AnalyzedPly;"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.ply.AnalyzedPlyImpl.getPly()Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()S"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.ply.PlyImpl.toString()Ljava/lang/String;"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.renderer2d.EnginePanel.modifyText(Ljava/lang/String;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.computeBestPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.renderer2d.StatusPanel.setStatusText(Ljava/lang/String;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(Z)B" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Lde/java_chess/javaChess/bitboard/BitBoard;Z)Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(Z)B" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getBoard()Lde/java_chess/javaChess/board/Board;"
"de.java_chess.javaChess.engine.ChessEngineImpl.getCurrentGameState(Z)B" --- "de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Lde/java_chess/javaChess/bitboard/BitBoard;Z)[Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.ChessEngineImpl.getHashSize()I" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getHashtable()Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;"
"de.java_chess.javaChess.engine.ChessEngineImpl.getHashSize()I" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getMaximumSize()I"
"de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()Ljavax/swing/JMenu;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getHashtable()Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;"
"de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()Ljavax/swing/JMenu;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getOpeningBook()Lde/java_chess/javaChess/engine/opening_book/OpeningBook;"
"de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()Ljavax/swing/JMenu;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setMaximumSearchTime(I)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()Ljavax/swing/JMenu;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()Ljavax/swing/JMenu;" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(I)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.getMenu()Ljavax/swing/JMenu;" --- "de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.-init-(Lde/java_chess/javaChess/engine/opening_book/OpeningBook;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()Ljava/lang/String;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getHashSize()I"
"de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()Ljava/lang/String;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getMaximumSearchTime()I"
"de.java_chess.javaChess.engine.ChessEngineImpl.getStatusDisplayString()Ljava/lang/String;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.isFixedTime()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getBoard()Lde/java_chess/javaChess/board/Board;"
"de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.isWhite()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Lde/java_chess/javaChess/bitboard/BitBoard;Z)[Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/board/Board;ZISS)S" --- "de.java_chess.javaChess.engine.ChessEngineImpl.analyzeBoard(Lde/java_chess/javaChess/board/Board;)S"
"de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/board/Board;ZISS)S" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getSearchDepth()I"
"de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/board/Board;ZISS)S" --- "de.java_chess.javaChess.engine.ChessEngineImpl.increaseAnalyzedBoards()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/board/Board;ZISS)S" --- "de.java_chess.javaChess.ply.PlyImpl.isCapture()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.notifyListeners()V" --- "de.java_chess.javaChess.JavaChess.engineStatusChanged(Lde/java_chess/javaChess/engine/ChessEngineImpl;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.reset()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getHashtable()Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;"
"de.java_chess.javaChess.engine.ChessEngineImpl.reset()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setInOpeningBook(Z)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.reset()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.reset()V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.reset()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.reset()V" --- "de.java_chess.javaChess.renderer2d.EnginePanel.setText(Ljava/lang/String;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.reset()V" --- "de.java_chess.javaChess.renderer2d.StatusPanel.setStatusText(Ljava/lang/String;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getSearchDepth()I"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.increaseSearchDepth()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.isSearchStop()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.isWhite()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setSearchDepth(I)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.ply.AnalyzedPlyImpl.getPly()Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()S"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.ply.PlyImpl.toString()Ljava/lang/String;"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.renderer2d.EnginePanel.modifyText(Ljava/lang/String;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.run()V" --- "de.java_chess.javaChess.renderer2d.StatusPanel.setStatusText(Ljava/lang/String;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.start()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setSearchStop(Z)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/board/Board;"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getBoard()Lde/java_chess/javaChess/board/Board;"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getGame()Lde/java_chess/javaChess/game/Game;"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getHashtable()Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getSearchDepth()I"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.isSearchStop()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.minimaxAlphaBeta(Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/board/Board;ZISS)S"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Lde/java_chess/javaChess/bitboard/BitBoard;Z)[Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(Lde/java_chess/javaChess/board/Board;Lde/java_chess/javaChess/ply/Ply;I)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(Lde/java_chess/javaChess/engine/hashtable/PlyHashtableEntry;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.game.GameImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.game.GameImpl.undoLastPly()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.startMinimaxAlphaBeta(Z)Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(Lde/java_chess/javaChess/ply/Ply;S)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.setAnalyzedBoards(J)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.startPermanentBrain()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.stopPermanentBrain()V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getPermanentBrain()Lde/java_chess/javaChess/engine/permanent_brain/PermanentBrain;"
"de.java_chess.javaChess.engine.ChessEngineImpl.stopPermanentBrain()V" --- "de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.stopComputation()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(Lde/java_chess/javaChess/ply/Ply;)Z" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getOpeningBook()Lde/java_chess/javaChess/engine/opening_book/OpeningBook;"
"de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(Lde/java_chess/javaChess/ply/Ply;)Z" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getPermanentBrain()Lde/java_chess/javaChess/engine/permanent_brain/PermanentBrain;"
"de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(Lde/java_chess/javaChess/ply/Ply;)Z" --- "de.java_chess.javaChess.engine.ChessEngineImpl.usePermanentBrain()Z"
"de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(Lde/java_chess/javaChess/ply/Ply;)Z" --- "de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.doUserPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(Lde/java_chess/javaChess/ply/Ply;)Z" --- "de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getUserPlies()[Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(Lde/java_chess/javaChess/ply/Ply;)Z" --- "de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.resetUserPlies()V"
"de.java_chess.javaChess.engine.ChessEngineImpl.validateUserPly(Lde/java_chess/javaChess/ply/Ply;)Z" --- "de.java_chess.javaChess.ply.PlyImpl.equals(Lde/java_chess/javaChess/ply/Ply;)Z"
"de.java_chess.javaChess.engine.PlyGenerator.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/bitboard/BitBoard;Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;)V" --- "de.java_chess.javaChess.engine.PlyGenerator.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;)V"
"de.java_chess.javaChess.engine.PlyGenerator.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/bitboard/BitBoard;Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;)V" --- "de.java_chess.javaChess.engine.PlyGenerator.setBoard(Lde/java_chess/javaChess/bitboard/BitBoard;)V"
"de.java_chess.javaChess.engine.PlyGenerator.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;)V" --- "de.java_chess.javaChess.engine.PlyGenerator.precomputeKingPlies()V"
"de.java_chess.javaChess.engine.PlyGenerator.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;)V" --- "de.java_chess.javaChess.engine.PlyGenerator.precomputeKnightPlies()V"
"de.java_chess.javaChess.engine.PlyGenerator.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;)V" --- "de.java_chess.javaChess.engine.PlyGenerator.setGame(Lde/java_chess/javaChess/game/Game;)V"
"de.java_chess.javaChess.engine.PlyGenerator.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;)V" --- "de.java_chess.javaChess.engine.PlyGenerator.setHashtable(Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;)V"
"de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(JIII)V" --- "de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(IIZS)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(I)V" --- "de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(IIZS)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(I)J"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()V" --- "de.java_chess.javaChess.engine.BitUtils.getHighestBit(J)I"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()V" --- "de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(I)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()V" --- "de.java_chess.javaChess.engine.PlyGenerator.getBoard()Lde/java_chess/javaChess/bitboard/BitBoard;"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(I)J"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()V" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Lde/java_chess/javaChess/bitboard/BitBoard;Z)Z"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()V" --- "de.java_chess.javaChess.engine.BitUtils.getHighestBit(J)I"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()V" --- "de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(JIII)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()V" --- "de.java_chess.javaChess.engine.PlyGenerator.getAnalyzer()Lde/java_chess/javaChess/engine/BitBoardAnalyzer;"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()V" --- "de.java_chess.javaChess.engine.PlyGenerator.getBoard()Lde/java_chess/javaChess/bitboard/BitBoard;"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()V" --- "de.java_chess.javaChess.engine.PlyGenerator.getGame()Lde/java_chess/javaChess/game/Game;"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()V" --- "de.java_chess.javaChess.game.GameImpl.hasBeenMoved(Lde/java_chess/javaChess/position/Position;)Z"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()V" --- "de.java_chess.javaChess.position.PositionImpl.-init-(I)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(I)J"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()V" --- "de.java_chess.javaChess.engine.BitUtils.-clinit-()V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()V" --- "de.java_chess.javaChess.engine.BitUtils.getHighestBit(J)I"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()V" --- "de.java_chess.javaChess.engine.PlyGenerator.addAbsolutePlies(JIII)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()V" --- "de.java_chess.javaChess.engine.PlyGenerator.getBoard()Lde/java_chess/javaChess/bitboard/BitBoard;"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(Lde/java_chess/javaChess/position/Position;)Lde/java_chess/javaChess/piece/Piece;"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(I)J"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V" --- "de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesDownward(JIII)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V" --- "de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesUpward(JIII)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V" --- "de.java_chess.javaChess.engine.PlyGenerator.getBoard()Lde/java_chess/javaChess/bitboard/BitBoard;"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V" --- "de.java_chess.javaChess.engine.PlyGenerator.getLastPly()Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V" --- "de.java_chess.javaChess.piece.PieceImpl.getColor()B"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V" --- "de.java_chess.javaChess.piece.PieceImpl.getType()B"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V" --- "de.java_chess.javaChess.ply.PlyImpl.getDestination()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V" --- "de.java_chess.javaChess.ply.PlyImpl.getSource()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V" --- "de.java_chess.javaChess.position.PositionImpl.getSquareIndex()I"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(I)V" --- "de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishopPos(I)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(I)V" --- "de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(I)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(I)J"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()V" --- "de.java_chess.javaChess.engine.BitUtils.getHighestBit(J)I"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()V" --- "de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueenPos(I)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()V" --- "de.java_chess.javaChess.engine.PlyGenerator.getBoard()Lde/java_chess/javaChess/bitboard/BitBoard;"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(I)V" --- "de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(IIZS)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(I)J"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()V" --- "de.java_chess.javaChess.engine.BitUtils.getHighestBit(J)I"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()V" --- "de.java_chess.javaChess.engine.PlyGenerator.addPliesForRookPos(I)V"
"de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()V" --- "de.java_chess.javaChess.engine.PlyGenerator.getBoard()Lde/java_chess/javaChess/bitboard/BitBoard;"
"de.java_chess.javaChess.engine.PlyGenerator.addPly(Lde/java_chess/javaChess/ply/Ply;S)V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getBoardAfterPly(Lde/java_chess/javaChess/ply/Ply;)Lde/java_chess/javaChess/board/Board;"
"de.java_chess.javaChess.engine.PlyGenerator.addPly(Lde/java_chess/javaChess/ply/Ply;S)V" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.isInCheck(Lde/java_chess/javaChess/bitboard/BitBoard;Z)Z"
"de.java_chess.javaChess.engine.PlyGenerator.addPly(Lde/java_chess/javaChess/ply/Ply;S)V" --- "de.java_chess.javaChess.engine.PlyGenerator.getAnalyzer()Lde/java_chess/javaChess/engine/BitBoardAnalyzer;"
"de.java_chess.javaChess.engine.PlyGenerator.addPly(Lde/java_chess/javaChess/ply/Ply;S)V" --- "de.java_chess.javaChess.engine.PlyGenerator.getBoard()Lde/java_chess/javaChess/bitboard/BitBoard;"
"de.java_chess.javaChess.engine.PlyGenerator.addPly(Lde/java_chess/javaChess/ply/Ply;S)V" --- "de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(Lde/java_chess/javaChess/ply/Ply;S)V"
"de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(IIZS)V" --- "de.java_chess.javaChess.engine.PlyGenerator.addPly(Lde/java_chess/javaChess/ply/Ply;S)V"
"de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(IIZS)V" --- "de.java_chess.javaChess.ply.PlyImpl.-init-(Lde/java_chess/javaChess/position/Position;Lde/java_chess/javaChess/position/Position;Z)V"
"de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(IIZS)V" --- "de.java_chess.javaChess.position.PositionImpl.-init-(I)V"
"de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesDownward(JIII)V" --- "de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(IIZS)V"
"de.java_chess.javaChess.engine.PlyGenerator.addRelativePliesUpward(JIII)V" --- "de.java_chess.javaChess.engine.PlyGenerator.addRegularPly(IIZS)V"
"de.java_chess.javaChess.engine.PlyGenerator.getLastPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.getGame()Lde/java_chess/javaChess/game/Game;"
"de.java_chess.javaChess.engine.PlyGenerator.getLastPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.game.GameImpl.getLastPly()Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Lde/java_chess/javaChess/bitboard/BitBoard;Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Lde/java_chess/javaChess/bitboard/BitBoard;Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.setBoard(Lde/java_chess/javaChess/bitboard/BitBoard;)V"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getAllPiecesForColor(Z)J"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()J"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPositionOfPieces(I)J"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.addPliesForBishops()V"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.addPliesForKing()V"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.addPliesForKnights()V"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.addPliesForPawns()V"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.addPliesForQueens()V"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.addPliesForRooks()V"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.getBoard()Lde/java_chess/javaChess/bitboard/BitBoard;"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.getHashtable()Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.presortPlies()V"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.PlyGenerator.resetPlies()V"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getPly(Lde/java_chess/javaChess/board/Board;Z)Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.PlyGenerator.getPliesForColor(Z)[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.ply.AnalyzedPlyImpl.getPly()Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.PlyGenerator.presortPlies()V" --- "de.java_chess.javaChess.engine.PlyGenerator.quickersort(II)V"
"de.java_chess.javaChess.engine.PlyGenerator.quickersort(II)V" --- "de.java_chess.javaChess.engine.PlyGenerator.shakersort(II)V"
"de.java_chess.javaChess.engine.PlyGenerator.quickersort(II)V" --- "de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()S"
"de.java_chess.javaChess.engine.PlyGenerator.shakersort(II)V" --- "de.java_chess.javaChess.ply.AnalyzedPlyImpl.getScore()S"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(Lde/java_chess/javaChess/board/Board;Lde/java_chess/javaChess/ply/Ply;I)V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.setBoard(Lde/java_chess/javaChess/board/Board;)V"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(Lde/java_chess/javaChess/board/Board;Lde/java_chess/javaChess/ply/Ply;I)V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.setPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.-init-(Lde/java_chess/javaChess/board/Board;Lde/java_chess/javaChess/ply/Ply;I)V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.setSearchDepth(I)V"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()J" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getBoard()Lde/java_chess/javaChess/board/Board;"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()J" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(Lde/java_chess/javaChess/board/Board;Z)J"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()J" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()Z"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(Lde/java_chess/javaChess/board/Board;Z)J" --- "de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.-clinit-()V"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(Lde/java_chess/javaChess/board/Board;Z)J" --- "de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(Lde/java_chess/javaChess/bitboard/BitBoard;Z)J"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(Lde/java_chess/javaChess/board/Board;Z)J" --- "de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.getInstance()Lde/java_chess/javaChess/engine/hashtable/ZobristKeyImpl;"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()Z" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(Lde/java_chess/javaChess/position/Position;)Lde/java_chess/javaChess/piece/Piece;"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()Z" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getBoard()Lde/java_chess/javaChess/board/Board;"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()Z" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.getPly()Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()Z" --- "de.java_chess.javaChess.piece.PieceImpl.getColor()B"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.isWhiteMove()Z" --- "de.java_chess.javaChess.ply.PlyImpl.getSource()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(I)V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(I)V"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getPly(Lde/java_chess/javaChess/board/Board;Z)Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey(Lde/java_chess/javaChess/board/Board;Z)J"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(Lde/java_chess/javaChess/engine/hashtable/PlyHashtableEntry;)V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableEntryImpl.hashKey()J"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(Lde/java_chess/javaChess/engine/hashtable/PlyHashtableEntry;)V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getMaximumSize()I"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.pushEntry(Lde/java_chess/javaChess/engine/hashtable/PlyHashtableEntry;)V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getSize()I"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(I)V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getMaximumSize()I"
"de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.setMaximumSize(I)V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.getSize()I"
"de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(Lde/java_chess/javaChess/bitboard/BitBoard;Z)J" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getEmptySquares()J"
"de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(Lde/java_chess/javaChess/bitboard/BitBoard;Z)J" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(Lde/java_chess/javaChess/position/Position;)Lde/java_chess/javaChess/piece/Piece;"
"de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(Lde/java_chess/javaChess/bitboard/BitBoard;Z)J" --- "de.java_chess.javaChess.piece.PieceImpl.getColor()B"
"de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(Lde/java_chess/javaChess/bitboard/BitBoard;Z)J" --- "de.java_chess.javaChess.piece.PieceImpl.getType()B"
"de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(Lde/java_chess/javaChess/bitboard/BitBoard;Z)J" --- "de.java_chess.javaChess.position.PositionImpl.-init-(I)V"
"de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.computeKey(Lde/java_chess/javaChess/bitboard/BitBoard;Z)J" --- "de.java_chess.javaChess.position.PositionImpl.setSquareIndex(I)V"
"de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.getInstance()Lde/java_chess/javaChess/engine/hashtable/ZobristKeyImpl;" --- "de.java_chess.javaChess.engine.hashtable.ZobristKeyImpl.-init-()V"
"de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.-init-(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.reset()V"
"de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.-init-(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.setNotation(Lde/java_chess/javaChess/notation/GameNotation;)V"
"de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.getOpeningBookPly()Lde/java_chess/javaChess/ply/AnalyzedPly;" --- "de.java_chess.javaChess.engine.opening_book.OpeningBookImpl.findOpening()I"
"de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.-init-(Lde/java_chess/javaChess/engine/opening_book/OpeningBook;)V" --- "de.java_chess.javaChess.action.JavaChessAction.-init-(Ljava/lang/String;)V"
"de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.-init-(Lde/java_chess/javaChess/engine/opening_book/OpeningBook;)V" --- "de.java_chess.javaChess.engine.opening_book.action.LoadOpeningsAction.setOpeningBook(Lde/java_chess/javaChess/engine/opening_book/OpeningBook;)V"
"de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.-init-(Lde/java_chess/javaChess/engine/ChessEngine;)V" --- "de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.setEngine(Lde/java_chess/javaChess/engine/ChessEngine;)V"
"de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getUserPlies()[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.ChessEngineImpl.getUserPlies()[Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getUserPlies()[Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.engine.permanent_brain.PermanentBrain.getEngine()Lde/java_chess/javaChess/engine/ChessEngine;"
"de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(Lde/java_chess/javaChess/game/GameImpl;Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(Lde/java_chess/javaChess/game/GameImpl;Lde/java_chess/javaChess/ply/Ply;J)V"
"de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(Lde/java_chess/javaChess/game/GameImpl;Lde/java_chess/javaChess/ply/Ply;J)V" --- "de.java_chess.javaChess.game.GameImpl$GameStatus.setMoved(Lde/java_chess/javaChess/position/Position;)V"
"de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(Lde/java_chess/javaChess/game/GameImpl;Lde/java_chess/javaChess/ply/Ply;J)V" --- "de.java_chess.javaChess.game.GameImpl$GameStatus.setMovedPieces(J)V"
"de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(Lde/java_chess/javaChess/game/GameImpl;Lde/java_chess/javaChess/ply/Ply;J)V" --- "de.java_chess.javaChess.game.GameImpl$GameStatus.setPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(Lde/java_chess/javaChess/game/GameImpl;Lde/java_chess/javaChess/ply/Ply;J)V" --- "de.java_chess.javaChess.ply.PlyImpl.getSource()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(Lde/java_chess/javaChess/game/GameImpl;Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/game/GameImpl$GameStatus;)V" --- "de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(Lde/java_chess/javaChess/game/GameImpl;Lde/java_chess/javaChess/ply/Ply;J)V"
"de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(Lde/java_chess/javaChess/game/GameImpl;Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/game/GameImpl$GameStatus;)V" --- "de.java_chess.javaChess.game.GameImpl$GameStatus.getMovedPieces()J"
"de.java_chess.javaChess.game.GameImpl$GameStatus.hasBeenMoved(Lde/java_chess/javaChess/position/Position;)Z" --- "de.java_chess.javaChess.position.PositionImpl.getSquareIndex()I"
"de.java_chess.javaChess.game.GameImpl$GameStatus.setMoved(Lde/java_chess/javaChess/position/Position;)V" --- "de.java_chess.javaChess.position.PositionImpl.getSquareIndex()I"
"de.java_chess.javaChess.game.GameImpl.-init-()V" --- "de.java_chess.javaChess.util.UnsynchronizedArrayStack.-init-()V"
"de.java_chess.javaChess.game.GameImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(Lde/java_chess/javaChess/game/GameImpl;Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.game.GameImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.game.GameImpl$GameStatus.-init-(Lde/java_chess/javaChess/game/GameImpl;Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/game/GameImpl$GameStatus;)V"
"de.java_chess.javaChess.game.GameImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.game.GameImpl.getLastGameStatus()Lde/java_chess/javaChess/game/GameImpl$GameStatus;"
"de.java_chess.javaChess.game.GameImpl.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.util.UnsynchronizedArrayStack.push(Ljava/lang/Object;)V"
"de.java_chess.javaChess.game.GameImpl.getLastGameStatus()Lde/java_chess/javaChess/game/GameImpl$GameStatus;" --- "de.java_chess.javaChess.util.UnsynchronizedArrayStack.empty()Z"
"de.java_chess.javaChess.game.GameImpl.getLastGameStatus()Lde/java_chess/javaChess/game/GameImpl$GameStatus;" --- "de.java_chess.javaChess.util.UnsynchronizedArrayStack.peek()Ljava/lang/Object;"
"de.java_chess.javaChess.game.GameImpl.getLastPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.game.GameImpl$GameStatus.getPly()Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.game.GameImpl.getLastPly()Lde/java_chess/javaChess/ply/Ply;" --- "de.java_chess.javaChess.game.GameImpl.getLastGameStatus()Lde/java_chess/javaChess/game/GameImpl$GameStatus;"
"de.java_chess.javaChess.game.GameImpl.getNumberOfPlies()I" --- "de.java_chess.javaChess.util.UnsynchronizedArrayStack.size()I"
"de.java_chess.javaChess.game.GameImpl.hasBeenMoved(Lde/java_chess/javaChess/position/Position;)Z" --- "de.java_chess.javaChess.game.GameImpl$GameStatus.hasBeenMoved(Lde/java_chess/javaChess/position/Position;)Z"
"de.java_chess.javaChess.game.GameImpl.hasBeenMoved(Lde/java_chess/javaChess/position/Position;)Z" --- "de.java_chess.javaChess.game.GameImpl.getLastGameStatus()Lde/java_chess/javaChess/game/GameImpl$GameStatus;"
"de.java_chess.javaChess.game.GameImpl.reset()V" --- "de.java_chess.javaChess.util.UnsynchronizedArrayStack.clear()V"
"de.java_chess.javaChess.game.GameImpl.undoLastPly()V" --- "de.java_chess.javaChess.util.UnsynchronizedArrayStack.pop()Ljava/lang/Object;"
"de.java_chess.javaChess.notation.GameNotationImpl.addPly(Lde/java_chess/javaChess/notation/PlyNotation;)V" --- "de.java_chess.javaChess.notation.GameNotationImpl.getNotationPanel()Lde/java_chess/javaChess/renderer2d/NotationPanel;"
"de.java_chess.javaChess.notation.GameNotationImpl.addPly(Lde/java_chess/javaChess/notation/PlyNotation;)V" --- "de.java_chess.javaChess.notation.GameNotationImpl.toString()Ljava/lang/String;"
"de.java_chess.javaChess.notation.GameNotationImpl.addPly(Lde/java_chess/javaChess/notation/PlyNotation;)V" --- "de.java_chess.javaChess.notation.PlyNotationImpl.toString()Ljava/lang/String;"
"de.java_chess.javaChess.notation.GameNotationImpl.addPly(Lde/java_chess/javaChess/notation/PlyNotation;)V" --- "de.java_chess.javaChess.renderer2d.NotationPanel.setText(Ljava/lang/String;)V"
"de.java_chess.javaChess.notation.GameNotationImpl.getPGNheader()Ljava/lang/String;" --- "de.java_chess.javaChess.notation.GameNotationImpl.getPlayerInfo(Z)Ljava/lang/String;"
"de.java_chess.javaChess.notation.GameNotationImpl.reset()V" --- "de.java_chess.javaChess.notation.GameNotationImpl.getNotationPanel()Lde/java_chess/javaChess/renderer2d/NotationPanel;"
"de.java_chess.javaChess.notation.GameNotationImpl.reset()V" --- "de.java_chess.javaChess.notation.GameNotationImpl.setOpeningInfo(Ljava/lang/String;)V"
"de.java_chess.javaChess.notation.GameNotationImpl.reset()V" --- "de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(Ljava/lang/String;Z)V"
"de.java_chess.javaChess.notation.GameNotationImpl.reset()V" --- "de.java_chess.javaChess.renderer2d.NotationPanel.setText(Ljava/lang/String;)V"
"de.java_chess.javaChess.notation.PlyNotationImpl.-init-(Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/piece/Piece;)V" --- "de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()V"
"de.java_chess.javaChess.notation.PlyNotationImpl.-init-(Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/piece/Piece;)V" --- "de.java_chess.javaChess.notation.PlyNotationImpl.setPiece(Lde/java_chess/javaChess/piece/Piece;)V"
"de.java_chess.javaChess.notation.PlyNotationImpl.-init-(Lde/java_chess/javaChess/ply/Ply;Lde/java_chess/javaChess/piece/Piece;)V" --- "de.java_chess.javaChess.notation.PlyNotationImpl.setPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()V" --- "de.java_chess.javaChess.notation.PlyNotationImpl.getPiece()Lde/java_chess/javaChess/piece/Piece;"
"de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()V" --- "de.java_chess.javaChess.notation.PlyNotationImpl.getPly()Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()V" --- "de.java_chess.javaChess.notation.PlyNotationImpl.isCapture()Z"
"de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()V" --- "de.java_chess.javaChess.notation.PlyNotationImpl.isCheck()Z"
"de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()V" --- "de.java_chess.javaChess.notation.PlyNotationImpl.isCheckMate()Z"
"de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()V" --- "de.java_chess.javaChess.piece.PieceImpl.getType()B"
"de.java_chess.javaChess.notation.PlyNotationImpl.computeStringRepresentation()V" --- "de.java_chess.javaChess.ply.PlyImpl.toString()Ljava/lang/String;"
"de.java_chess.javaChess.notation.PlyNotationImpl.isCapture()Z" --- "de.java_chess.javaChess.notation.PlyNotationImpl.getPly()Lde/java_chess/javaChess/ply/Ply;"
"de.java_chess.javaChess.notation.PlyNotationImpl.isCapture()Z" --- "de.java_chess.javaChess.ply.PlyImpl.isCapture()Z"
"de.java_chess.javaChess.pgn.GameLoader.-init-()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.-init-()V"
"de.java_chess.javaChess.pgn.GameLoader.-init-()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.initialPosition()V"
"de.java_chess.javaChess.pgn.GameLoader.-init-()V" --- "de.java_chess.javaChess.engine.BitBoardAnalyzerImpl.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/engine/PlyGenerator;)V"
"de.java_chess.javaChess.pgn.GameLoader.-init-()V" --- "de.java_chess.javaChess.engine.PlyGenerator.-init-(Lde/java_chess/javaChess/game/Game;Lde/java_chess/javaChess/bitboard/BitBoard;Lde/java_chess/javaChess/engine/hashtable/PlyHashtable;)V"
"de.java_chess.javaChess.pgn.GameLoader.-init-()V" --- "de.java_chess.javaChess.engine.PlyGenerator.setAnalyzer(Lde/java_chess/javaChess/engine/BitBoardAnalyzer;)V"
"de.java_chess.javaChess.pgn.GameLoader.-init-()V" --- "de.java_chess.javaChess.engine.hashtable.PlyHashtableImpl.-init-(I)V"
"de.java_chess.javaChess.pgn.GameLoader.-init-()V" --- "de.java_chess.javaChess.game.GameImpl.-init-()V"
"de.java_chess.javaChess.pgn.PGNFile.-init-(Ljava/io/Reader;)V" --- "de.java_chess.javaChess.pgn.PGNFile.setReader(Ljava/io/Reader;)V"
"de.java_chess.javaChess.pgn.PGNFile.getPGNParser()Lde/java_chess/javaChess/pgn/PGNParser;" --- "de.java_chess.javaChess.pgn.PGNFile.getReader()Ljava/io/Reader;"
"de.java_chess.javaChess.pgn.PGNFile.getPGNParser()Lde/java_chess/javaChess/pgn/PGNParser;" --- "de.java_chess.javaChess.pgn.PGNLexer.-clinit-()V"
"de.java_chess.javaChess.pgn.PGNFile.getPGNParser()Lde/java_chess/javaChess/pgn/PGNParser;" --- "de.java_chess.javaChess.pgn.PGNLexer.-init-(Ljava/io/Reader;)V"
"de.java_chess.javaChess.pgn.PGNFile.getPGNParser()Lde/java_chess/javaChess/pgn/PGNParser;" --- "de.java_chess.javaChess.pgn.PGNParser.-clinit-()V"
"de.java_chess.javaChess.pgn.PGNFile.getPGNParser()Lde/java_chess/javaChess/pgn/PGNParser;" --- "de.java_chess.javaChess.pgn.PGNParser.-init-(Lantlr/TokenStream;)V"
"de.java_chess.javaChess.pgn.PGNFile.readGame()Lde/java_chess/javaChess/notation/GameNotation;" --- "de.java_chess.javaChess.notation.GameNotationImpl.-init-()V"
"de.java_chess.javaChess.pgn.PGNFile.readGame()Lde/java_chess/javaChess/notation/GameNotation;" --- "de.java_chess.javaChess.pgn.PGNFile.getPGNParser()Lde/java_chess/javaChess/pgn/PGNParser;"
"de.java_chess.javaChess.pgn.PGNFile.readGame()Lde/java_chess/javaChess/notation/GameNotation;" --- "de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V"
"de.java_chess.javaChess.pgn.PGNLexer.-init-(Lantlr/InputBuffer;)V" --- "de.java_chess.javaChess.pgn.PGNLexer.-init-(Lantlr/LexerSharedInputState;)V"
"de.java_chess.javaChess.pgn.PGNLexer.-init-(Ljava/io/Reader;)V" --- "de.java_chess.javaChess.pgn.PGNLexer.-init-(Lantlr/InputBuffer;)V"
"de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;" --- "de.java_chess.javaChess.pgn.PGNLexer.mLBRACK(Z)V"
"de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;" --- "de.java_chess.javaChess.pgn.PGNLexer.mRBRACK(Z)V"
"de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;" --- "de.java_chess.javaChess.pgn.PGNLexer.mSTRING_LITERAL(Z)V"
"de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;" --- "de.java_chess.javaChess.pgn.PGNLexer.mTAG_BLACK(Z)V"
"de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;" --- "de.java_chess.javaChess.pgn.PGNLexer.mTAG_DATE(Z)V"
"de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;" --- "de.java_chess.javaChess.pgn.PGNLexer.mTAG_EVENT(Z)V"
"de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;" --- "de.java_chess.javaChess.pgn.PGNLexer.mTAG_RESULT(Z)V"
"de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;" --- "de.java_chess.javaChess.pgn.PGNLexer.mTAG_ROUND(Z)V"
"de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;" --- "de.java_chess.javaChess.pgn.PGNLexer.mTAG_SITE(Z)V"
"de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;" --- "de.java_chess.javaChess.pgn.PGNLexer.mTAG_WHITE(Z)V"
"de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;" --- "de.java_chess.javaChess.pgn.PGNLexer.mWS(Z)V"
"de.java_chess.javaChess.pgn.PGNOutputStream.write(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.notation.GameNotationImpl.getPGNheader()Ljava/lang/String;"
"de.java_chess.javaChess.pgn.PGNOutputStream.write(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.notation.GameNotationImpl.toString()Ljava/lang/String;"
"de.java_chess.javaChess.pgn.PGNParser.-init-(Lantlr/TokenStream;)V" --- "de.java_chess.javaChess.pgn.PGNParser.-init-(Lantlr/TokenStream;I)V"
"de.java_chess.javaChess.pgn.PGNParser.blackTag()V" --- "de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(Ljava/lang/String;Z)V"
"de.java_chess.javaChess.pgn.PGNParser.blackTag()V" --- "de.java_chess.javaChess.pgn.PGNParser.getNotation()Lde/java_chess/javaChess/notation/GameNotation;"
"de.java_chess.javaChess.pgn.PGNParser.blackTag()V" --- "de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()V"
"de.java_chess.javaChess.pgn.PGNParser.dateTag()V" --- "de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()V"
"de.java_chess.javaChess.pgn.PGNParser.eventTag()V" --- "de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.JavaChess$4.actionPerformed(Ljava/awt/event/ActionEvent;)V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.action.SaveGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.engine.ChessEngineImpl.actionPerformed(Ljava/awt/event/ActionEvent;)V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.pgn.GameLoader.-init-()V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.pgn.PGNParser.moveTextSection()V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.pgn.PGNParser.setGameLoader(Lde/java_chess/javaChess/pgn/GameLoader;)V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.pgn.PGNParser.setNotation(Lde/java_chess/javaChess/notation/GameNotation;)V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.pgn.PGNParser.tagPairSection()V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(Ljava/awt/Graphics;)V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getPreferredSize()Ljava/awt/Dimension;"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.renderer2d.ControlLayer$1.mouseClicked(Ljava/awt/event/MouseEvent;)V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.renderer2d.ControlLayer.paintComponent(Ljava/awt/Graphics;)V"
"de.java_chess.javaChess.pgn.PGNParser.pgnGame(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(Ljava/awt/event/ActionEvent;)V"
"de.java_chess.javaChess.pgn.PGNParser.resultTag()V" --- "de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()V"
"de.java_chess.javaChess.pgn.PGNParser.roundTag()V" --- "de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()V"
"de.java_chess.javaChess.pgn.PGNParser.siteTag()V" --- "de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()V"
"de.java_chess.javaChess.pgn.PGNParser.tagPair()V" --- "de.java_chess.javaChess.pgn.PGNParser.blackTag()V"
"de.java_chess.javaChess.pgn.PGNParser.tagPair()V" --- "de.java_chess.javaChess.pgn.PGNParser.dateTag()V"
"de.java_chess.javaChess.pgn.PGNParser.tagPair()V" --- "de.java_chess.javaChess.pgn.PGNParser.eventTag()V"
"de.java_chess.javaChess.pgn.PGNParser.tagPair()V" --- "de.java_chess.javaChess.pgn.PGNParser.resultTag()V"
"de.java_chess.javaChess.pgn.PGNParser.tagPair()V" --- "de.java_chess.javaChess.pgn.PGNParser.roundTag()V"
"de.java_chess.javaChess.pgn.PGNParser.tagPair()V" --- "de.java_chess.javaChess.pgn.PGNParser.siteTag()V"
"de.java_chess.javaChess.pgn.PGNParser.tagPair()V" --- "de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()V"
"de.java_chess.javaChess.pgn.PGNParser.tagPair()V" --- "de.java_chess.javaChess.pgn.PGNParser.whiteTag()V"
"de.java_chess.javaChess.pgn.PGNParser.tagPairSection()V" --- "de.java_chess.javaChess.pgn.PGNParser.tagPair()V"
"de.java_chess.javaChess.pgn.PGNParser.tagPairSection()V" --- "de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()V"
"de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()V" --- "de.java_chess.javaChess.pgn.PGNLexer.nextToken()Lantlr/Token;"
"de.java_chess.javaChess.pgn.PGNParser.whiteTag()V" --- "de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(Ljava/lang/String;Z)V"
"de.java_chess.javaChess.pgn.PGNParser.whiteTag()V" --- "de.java_chess.javaChess.pgn.PGNParser.getNotation()Lde/java_chess/javaChess/notation/GameNotation;"
"de.java_chess.javaChess.pgn.PGNParser.whiteTag()V" --- "de.java_chess.javaChess.pgn.PGNParser.whiteSpaces()V"
"de.java_chess.javaChess.piece.PieceImpl.-init-(BB)V" --- "de.java_chess.javaChess.piece.PieceImpl.-init-(B)V"
"de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(Lde/java_chess/javaChess/ply/Ply;S)V" --- "de.java_chess.javaChess.ply.AnalyzedPlyImpl.setPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.ply.AnalyzedPlyImpl.-init-(Lde/java_chess/javaChess/ply/Ply;S)V" --- "de.java_chess.javaChess.ply.AnalyzedPlyImpl.setScore(S)V"
"de.java_chess.javaChess.ply.PlyImpl.-init-(Lde/java_chess/javaChess/position/Position;Lde/java_chess/javaChess/position/Position;Z)V" --- "de.java_chess.javaChess.ply.PlyImpl.setCapture(Z)V"
"de.java_chess.javaChess.ply.PlyImpl.-init-(Lde/java_chess/javaChess/position/Position;Lde/java_chess/javaChess/position/Position;Z)V" --- "de.java_chess.javaChess.ply.PlyImpl.setDestination(Lde/java_chess/javaChess/position/Position;)V"
"de.java_chess.javaChess.ply.PlyImpl.-init-(Lde/java_chess/javaChess/position/Position;Lde/java_chess/javaChess/position/Position;Z)V" --- "de.java_chess.javaChess.ply.PlyImpl.setSource(Lde/java_chess/javaChess/position/Position;)V"
"de.java_chess.javaChess.ply.PlyImpl.equals(Lde/java_chess/javaChess/ply/Ply;)Z" --- "de.java_chess.javaChess.ply.PlyImpl.getDestination()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.ply.PlyImpl.equals(Lde/java_chess/javaChess/ply/Ply;)Z" --- "de.java_chess.javaChess.ply.PlyImpl.getSource()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.ply.PlyImpl.equals(Lde/java_chess/javaChess/ply/Ply;)Z" --- "de.java_chess.javaChess.position.PositionImpl.equals(Lde/java_chess/javaChess/position/Position;)Z"
"de.java_chess.javaChess.ply.PlyImpl.toString()Ljava/lang/String;" --- "de.java_chess.javaChess.ply.PlyImpl.getDestination()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.ply.PlyImpl.toString()Ljava/lang/String;" --- "de.java_chess.javaChess.ply.PlyImpl.getSource()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.ply.PlyImpl.toString()Ljava/lang/String;" --- "de.java_chess.javaChess.position.PositionImpl.toSquareName()Ljava/lang/String;"
"de.java_chess.javaChess.position.PositionImpl.-init-(I)V" --- "de.java_chess.javaChess.position.PositionImpl.setSquareIndex(I)V"
"de.java_chess.javaChess.position.PositionImpl.equals(Lde/java_chess/javaChess/position/Position;)Z" --- "de.java_chess.javaChess.position.PositionImpl.getSquareIndex()I"
"de.java_chess.javaChess.position.PositionImpl.toSquareName()Ljava/lang/String;" --- "de.java_chess.javaChess.position.PositionImpl.getLineIndex()I"
"de.java_chess.javaChess.position.PositionImpl.toSquareName()Ljava/lang/String;" --- "de.java_chess.javaChess.position.PositionImpl.getRowIndex()I"
"de.java_chess.javaChess.renderer2d.AnimationLayer.-init-(Lde/java_chess/javaChess/renderer2d/PiecesLayer;)V" --- "de.java_chess.javaChess.renderer2d.AnimationLayer.setPiecesLayer(Lde/java_chess/javaChess/renderer2d/PiecesLayer;)V"
"de.java_chess.javaChess.renderer2d.BoardLayer.-init-()V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()I"
"de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(Ljava/awt/Graphics;)V" --- "de.java_chess.javaChess.action.LoadGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V"
"de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(Ljava/awt/Graphics;)V" --- "de.java_chess.javaChess.action.ResetGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V"
"de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(Ljava/awt/Graphics;)V" --- "de.java_chess.javaChess.action.SaveGameAction.actionPerformed(Ljava/awt/event/ActionEvent;)V"
"de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(Ljava/awt/Graphics;)V" --- "de.java_chess.javaChess.action.SaveGameAsAction.actionPerformed(Ljava/awt/event/ActionEvent;)V"
"de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(Ljava/awt/Graphics;)V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getPreferredSize()Ljava/awt/Dimension;"
"de.java_chess.javaChess.renderer2d.BoardLayer.paintComponent(Ljava/awt/Graphics;)V" --- "de.java_chess.javaChess.renderer2d.ControlLayer.paintComponent(Ljava/awt/Graphics;)V"
"de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(Lde/java_chess/javaChess/GameController;Lde/java_chess/javaChess/board/Board;)V" --- "de.java_chess.javaChess.renderer2d.BoardLayer.-init-()V"
"de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(Lde/java_chess/javaChess/GameController;Lde/java_chess/javaChess/board/Board;)V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getBoard()Lde/java_chess/javaChess/board/Board;"
"de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(Lde/java_chess/javaChess/GameController;Lde/java_chess/javaChess/board/Board;)V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.setBoard(Lde/java_chess/javaChess/board/Board;)V"
"de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(Lde/java_chess/javaChess/GameController;Lde/java_chess/javaChess/board/Board;)V" --- "de.java_chess.javaChess.renderer2d.ControlLayer.-init-(Lde/java_chess/javaChess/GameController;Lde/java_chess/javaChess/renderer2d/PiecesLayer;)V"
"de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(Lde/java_chess/javaChess/GameController;Lde/java_chess/javaChess/board/Board;)V" --- "de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(Lde/java_chess/javaChess/board/Board;)V"
"de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.-init-(Lde/java_chess/javaChess/GameController;Lde/java_chess/javaChess/board/Board;)V" --- "de.java_chess.javaChess.renderer2d.PiecesLayer.getAnimationLayer()Lde/java_chess/javaChess/renderer2d/AnimationLayer;"
"de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getMinimumSize()Ljava/awt/Dimension;" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()I"
"de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getPreferredSize()Ljava/awt/Dimension;" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getMinimumSize()Ljava/awt/Dimension;"
"de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.repaintBoard()V" --- "de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()V"
"de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.reset()V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.repaintBoard()V"
"de.java_chess.javaChess.renderer2d.ChessSet.-init-(Ljava/awt/Component;)V" --- "de.java_chess.javaChess.util.ResourceLoader.getInstance()Lde/java_chess/javaChess/util/ResourceLoader;"
"de.java_chess.javaChess.renderer2d.ChessSet.-init-(Ljava/awt/Component;)V" --- "de.java_chess.javaChess.util.ResourceLoader.loadImage(Ljava/lang/String;)Ljava/awt/Image;"
"de.java_chess.javaChess.renderer2d.ControlLayer$1.mouseClicked(Ljava/awt/event/MouseEvent;)V" --- "de.java_chess.javaChess.renderer2d.ControlLayer$2.-init-(ILde/java_chess/javaChess/renderer2d/ControlLayer;)V"
"de.java_chess.javaChess.renderer2d.ControlLayer$2.run()V" --- "de.java_chess.javaChess.GameController.userPly(Lde/java_chess/javaChess/ply/Ply;)V"
"de.java_chess.javaChess.renderer2d.ControlLayer$2.run()V" --- "de.java_chess.javaChess.ply.PlyImpl.-init-(Lde/java_chess/javaChess/position/Position;Lde/java_chess/javaChess/position/Position;Z)V"
"de.java_chess.javaChess.renderer2d.ControlLayer$2.run()V" --- "de.java_chess.javaChess.position.PositionImpl.-init-(I)V"
"de.java_chess.javaChess.renderer2d.ControlLayer$2.run()V" --- "de.java_chess.javaChess.renderer2d.ControlLayer.access$0(Lde/java_chess/javaChess/renderer2d/ControlLayer;)Lde/java_chess/javaChess/GameController;"
"de.java_chess.javaChess.renderer2d.ControlLayer.-init-(Lde/java_chess/javaChess/GameController;Lde/java_chess/javaChess/renderer2d/PiecesLayer;)V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()I"
"de.java_chess.javaChess.renderer2d.ControlLayer.-init-(Lde/java_chess/javaChess/GameController;Lde/java_chess/javaChess/renderer2d/PiecesLayer;)V" --- "de.java_chess.javaChess.renderer2d.ControlLayer$1.-init-(Lde/java_chess/javaChess/renderer2d/ControlLayer;)V"
"de.java_chess.javaChess.renderer2d.ControlLayer.-init-(Lde/java_chess/javaChess/GameController;Lde/java_chess/javaChess/renderer2d/PiecesLayer;)V" --- "de.java_chess.javaChess.renderer2d.ControlLayer.setController(Lde/java_chess/javaChess/GameController;)V"
"de.java_chess.javaChess.renderer2d.ControlLayer.access$0(Lde/java_chess/javaChess/renderer2d/ControlLayer;)Lde/java_chess/javaChess/GameController;" --- "de.java_chess.javaChess.renderer2d.ControlLayer.getController()Lde/java_chess/javaChess/GameController;"
"de.java_chess.javaChess.renderer2d.ControlLayer.paintComponent(Ljava/awt/Graphics;)V" --- "de.java_chess.javaChess.renderer2d.ControlLayer.markSquare(ILjava/awt/Graphics;)V"
"de.java_chess.javaChess.renderer2d.EnginePanel.-init-()V" --- "de.java_chess.javaChess.renderer2d.EnginePanel.jbInit()V"
"de.java_chess.javaChess.renderer2d.EnginePanel.modifyText(Ljava/lang/String;)V" --- "de.java_chess.javaChess.renderer2d.EnginePanel.getText()Ljava/lang/String;"
"de.java_chess.javaChess.renderer2d.EnginePanel.modifyText(Ljava/lang/String;)V" --- "de.java_chess.javaChess.renderer2d.EnginePanel.setText(Ljava/lang/String;)V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-()V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.jbInit()V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(I)V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-()V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.-init-(I)V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.setCountdown(I)V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.jbInit()V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.-init-(Z)V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.jbInit()V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.addActionListener(Ljava/awt/event/ActionListener;)V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.jbInit()V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.alignText()V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(I)V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.setCountdown(I)V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(I)V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.setNoClockRunning()V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.reset(I)V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.stop()V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.setCountdown(I)V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.setCountdown(I)V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.start()V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.setBlackClockRunning()V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.start()V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.setRunning(Z)V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.start()V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.start()V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.stop()V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.setRunning(Z)V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.stop()V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.stop()V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.setBlackClockRunning()V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.setWhiteClockRunning()V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.start()V"
"de.java_chess.javaChess.renderer2d.GameTimerPanel.toggle()V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.stop()V"
"de.java_chess.javaChess.renderer2d.NavigationPanel.-init-()V" --- "de.java_chess.javaChess.renderer2d.NavigationPanel.jbInit()V"
"de.java_chess.javaChess.renderer2d.NotationPanel.-init-(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.renderer2d.NotationPanel.jbInit()V"
"de.java_chess.javaChess.renderer2d.NotationPanel.-init-(Lde/java_chess/javaChess/notation/GameNotation;)V" --- "de.java_chess.javaChess.renderer2d.NotationPanel.setGameNotation(Lde/java_chess/javaChess/notation/GameNotation;)V"
"de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.dialogs.PlayerDialog.-init-(ILjava/lang/String;)V"
"de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.dialogs.PlayerDialog.actionPerformed(Ljava/awt/event/ActionEvent;)V"
"de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.dialogs.PlayerDialog.getNewName()Ljava/lang/String;"
"de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.renderer2d.NotationPanel.getBlackPlayerName()Ljava/lang/String;"
"de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.renderer2d.NotationPanel.getWhitePlayerName()Ljava/lang/String;"
"de.java_chess.javaChess.renderer2d.NotationPanel.actionPerformed(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.util.Tools.setDialogToCenter(Ljavax/swing/JDialog;)V"
"de.java_chess.javaChess.renderer2d.NotationPanel.jbInit()V" --- "de.java_chess.javaChess.renderer2d.NotationPanel.setBlackPlayerName(Ljava/lang/String;)V"
"de.java_chess.javaChess.renderer2d.NotationPanel.jbInit()V" --- "de.java_chess.javaChess.renderer2d.NotationPanel.setWhitePlayerName(Ljava/lang/String;)V"
"de.java_chess.javaChess.renderer2d.NotationPanel.setBlackPlayerName(Ljava/lang/String;)V" --- "de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(Ljava/lang/String;Z)V"
"de.java_chess.javaChess.renderer2d.NotationPanel.setWhitePlayerName(Ljava/lang/String;)V" --- "de.java_chess.javaChess.notation.GameNotationImpl.setPlayerInfo(Ljava/lang/String;Z)V"
"de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(Lde/java_chess/javaChess/board/Board;)V" --- "de.java_chess.javaChess.renderer2d.AnimationLayer.-init-(Lde/java_chess/javaChess/renderer2d/PiecesLayer;)V"
"de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(Lde/java_chess/javaChess/board/Board;)V" --- "de.java_chess.javaChess.renderer2d.ChessBoardRenderer2D.getSquareSize()I"
"de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(Lde/java_chess/javaChess/board/Board;)V" --- "de.java_chess.javaChess.renderer2d.ChessSet.-init-(Ljava/awt/Component;)V"
"de.java_chess.javaChess.renderer2d.PiecesLayer.-init-(Lde/java_chess/javaChess/board/Board;)V" --- "de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()V"
"de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.ply.PlyImpl.getDestination()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.ply.PlyImpl.getSource()Lde/java_chess/javaChess/position/Position;"
"de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.position.PositionImpl.getSquareIndex()I"
"de.java_chess.javaChess.renderer2d.PiecesLayer.doPly(Lde/java_chess/javaChess/ply/Ply;)V" --- "de.java_chess.javaChess.renderer2d.PositionRenderer.getPieceFrom(Lde/java_chess/javaChess/renderer2d/PositionRenderer;)V"
"de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()V" --- "de.java_chess.javaChess.bitboard.BitBoardImpl.getPiece(Lde/java_chess/javaChess/position/Position;)Lde/java_chess/javaChess/piece/Piece;"
"de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()V" --- "de.java_chess.javaChess.piece.PieceImpl.getColor()B"
"de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()V" --- "de.java_chess.javaChess.piece.PieceImpl.getType()B"
"de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()V" --- "de.java_chess.javaChess.position.PositionImpl.-init-(I)V"
"de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()V" --- "de.java_chess.javaChess.position.PositionImpl.setSquareIndex(I)V"
"de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()V" --- "de.java_chess.javaChess.renderer2d.PieceRenderer.-init-(BBLde/java_chess/javaChess/renderer2d/ChessSet;Ljava/awt/Component;)V"
"de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()V" --- "de.java_chess.javaChess.renderer2d.PositionRenderer.-init-()V"
"de.java_chess.javaChess.renderer2d.PiecesLayer.repaintBoard()V" --- "de.java_chess.javaChess.renderer2d.PositionRenderer.-init-(Ljava/awt/Image;)V"
"de.java_chess.javaChess.renderer2d.PositionRenderer.getPieceFrom(Lde/java_chess/javaChess/renderer2d/PositionRenderer;)V" --- "de.java_chess.javaChess.renderer2d.PositionRenderer.setIcon(Ljavax/swing/ImageIcon;)V"
"de.java_chess.javaChess.renderer2d.StatusPanel.-init-(Ljava/lang/String;)V" --- "de.java_chess.javaChess.renderer2d.StatusPanel.jbInit()V"
"de.java_chess.javaChess.renderer2d.TimerPanel.-init-(Z)V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.setCountingDirection(Z)V"
"de.java_chess.javaChess.renderer2d.TimerPanel.display(J)V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.isCountdown()Z"
"de.java_chess.javaChess.renderer2d.TimerPanel.notifyListeners(Ljava/awt/event/ActionEvent;)V" --- "de.java_chess.javaChess.renderer2d.GameTimerPanel.actionPerformed(Ljava/awt/event/ActionEvent;)V"
"de.java_chess.javaChess.renderer2d.TimerPanel.run()V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.display(J)V"
"de.java_chess.javaChess.renderer2d.TimerPanel.run()V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.notifyListeners(Ljava/awt/event/ActionEvent;)V"
"de.java_chess.javaChess.renderer2d.TimerPanel.setCountdown(I)V" --- "de.java_chess.javaChess.renderer2d.TimerPanel.display(J)V"
"de.java_chess.javaChess.util.ResourceLoader.getInstance()Lde/java_chess/javaChess/util/ResourceLoader;" --- "de.java_chess.javaChess.util.ResourceLoader.-init-()V"
"de.java_chess.javaChess.util.UnsynchronizedArrayStack.-init-()V" --- "de.java_chess.javaChess.util.UnsynchronizedArrayStack.-init-(I)V"
"de.java_chess.javaChess.util.UnsynchronizedArrayStack.peek()Ljava/lang/Object;" --- "de.java_chess.javaChess.util.UnsynchronizedArrayStack.empty()Z"
"de.java_chess.javaChess.util.UnsynchronizedArrayStack.pop()Ljava/lang/Object;" --- "de.java_chess.javaChess.util.UnsynchronizedArrayStack.empty()Z"}]);